cmake_minimum_required(VERSION 3.5)

set(CMAKE_BUILD_TYPE $ENV{TFSCLIENT_BUILD})

project($ENV{TFSCLIENT_NAME_CAMEL} VERSION $ENV{TFSCLIENT_VERSION} LANGUAGES CXX)

find_package(Protobuf $ENV{TFSCLIENT_VERSION_PROTO} REQUIRED)

set(PROTO_GENERATED "${CMAKE_SOURCE_DIR}/$ENV{TFSCLIENT_SOURCE}")
file(GLOB_RECURSE SOURCES "${PROTO_GENERATED}/*.cc")

add_library($ENV{TFSCLIENT_NAME} STATIC ${SOURCES})
target_compile_features($ENV{TFSCLIENT_NAME} PRIVATE cxx_std_11)
target_include_directories($ENV{TFSCLIENT_NAME}
  PUBLIC
    $<INSTALL_INTERFACE:include>
    $<BUILD_INTERFACE:${PROTO_GENERATED}>
  PRIVATE
    ${PROTOBUF_INCLUDE_DIRS})
target_link_libraries($ENV{TFSCLIENT_NAME} PUBLIC ${PROTOBUF_LIBRARIES})

install(TARGETS $ENV{TFSCLIENT_NAME} EXPORT "$ENV{TFSCLIENT_NAME}-targets"
  ARCHIVE DESTINATION lib INCLUDES DESTINATION include)
install(DIRECTORY "${PROTO_GENERATED}/" DESTINATION include FILES_MATCHING PATTERN "*.h")
install(EXPORT "$ENV{TFSCLIENT_NAME}-targets" DESTINATION lib/cmake)
