buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath "com.google.protobuf:protobuf-gradle-plugin:0.8.10"
    classpath "ru.vyarus:gradle-use-python-plugin:1.2.0"
  }
}

apply plugin: "java-library"
apply plugin: "com.google.protobuf"
apply plugin: "ru.vyarus.use-python"

ext {
  tfsVer = new File("VERSION").text.trim()
  jvmVer = "8"
  grpcVer = "1.24.0"
  protoVer = "3.10.0"
}

group = "io.opil"
version = "${tfsVer}"

sourceCompatibility = "1.${jvmVer}"
targetCompatibility = "1.${jvmVer}"

repositories {
  mavenCentral()
}

sourceSets {
  main {
    proto {
      srcDir "proto"
    }
  }
}

protobuf {
  protoc {
    artifact = "com.google.protobuf:protoc:${protoVer}"
  }
  plugins {
    grpc {
      artifact = "io.grpc:protoc-gen-grpc-java:${grpcVer}"
    }
  }
  generateProtoTasks {
    all()*.builtins {
      cpp { }
      java { }
      python { }
    }
    all()*.plugins {
      grpc { }
    }
  }
}

sourceSets {
  generated {
    java {
      srcDir "${protobuf.generatedFilesBaseDir}/main/java"
    }
  }
}

dependencies {
  implementation "com.google.protobuf:protobuf-java:${protoVer}"
  implementation "io.grpc:grpc-protobuf:${grpcVer}"
  implementation "io.grpc:grpc-stub:${grpcVer}"
}

jar {
  baseName "tensorflow-serving-client"
}

javadoc {
  source sourceSets.generated.java
  options.addStringOption("Xdoclint:none", "-quiet")
}

task wheel(type: PythonTask) {
  dependsOn "generateProto"
  command "setup.py sdist -d build/dist bdist_wheel -d build/dist"
}

task cmake() {
  dependsOn "generateProto"
  doLast {
    exec {
      workingDir "build"
      commandLine "cmake", "-DCMAKE_INSTALL_PREFIX=", ".."
    }
    exec {
      workingDir "build"
      commandLine "make", "DESTDIR=dist", "install"
    }
  }
}
